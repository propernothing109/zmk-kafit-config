#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define SYM 1
#define FNC 2
#define MED 3
// -----------------

/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
	};

    macros {
		mpw: mpw {
			label = "ZM_mpw";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp q &kp w &kp e &kp r &kp t &kp y>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp Q      &kp W       &kp E       &kp R        &kp T           &kp Y &kp U         &kp I          &kp O       &kp P
			&qt LCMD A &qt LCTRL S &qt LALT D  &qt LSHIFT F &kp G           &kp H &qt RSHIFT J  &qt RALT K     &qt RCTRL L &qt RCMD SEMICOLON
			&kp Z      &kp X       &kp C       &kp V        &kp B           &kp N &kp M         &kp COMMA      &kp DOT     &kp SLASH
							                   &lt MED ESC  &lt FNC SPACE   &lt  SYM ENTER      &kp BACKSPACE
			>;
		};

		// Numbers, symbols, and arrow keys
		sym_layer {
			label = "Sym.";
			bindings = <
			&kp LBKT      &kp N7       &kp N8       &kp N9        &kp RBKT           &kp HOME &kp PG_DN         &kp PG_UP          &kp END      &trans
			&qt LCMD GRAVE &qt LCTRL N4 &qt LALT N5  &qt LSHIFT N6 &kp EQUAL           &kp LEFT &qt RSHIFT DOWN  &qt RALT UP     &qt RCTRL RIGHT  &trans
			&kp SQT      &kp N1      &kp N2       &kp N3        &kp BACKSLASH           &trans &trans         &trans      &trans     &trans
							                   &kp N0  &kp MINUS   &trans      &trans
			>;
		};


		// Function keys with modifiers
		fnc_layer {
			label = "Fnc";
			bindings = <
			&trans     &kp F7       &kp F8       &kp F9        &kp F12          &trans &trans         &trans          &trans       &trans
			&trans &kp F4 &kp F5  &kp F6  &kp F11           &trans &trans  &trans     &trans &trans
			&trans     &kp F1       &kp F2       &kp F3        &kp F10           &trans &trans        &trans      &trans     &trans
							                   &trans  &trans   &kp TAB      &trans
			>;
		};

		// Function keys with modifiers
		med_layer {
			label = "Med.";
			bindings = <
			&trans &trans &trans &trans &trans   &trans  &trans    &trans    &trans   &trans
			&trans &trans &trans &trans &trans   &kp K_PREV &kp K_PP     &kp K_NEXT   &kp K_STOP2 &trans
			&trans &trans &trans &trans &trans   &kp K_MUTE &kp K_VOL_DN &kp K_VOL_UP &trans   &trans
							     &trans &trans   &mpw  &trans

			>;
		};
	};
};
